version: "3.3"
services:
# first, we define the three mongo servers that will act as replicas
# here, we steup the hostname ports, and startup command
# which is the same as discussed in the previous section
  mongo1:
    hostname: mongo1
    image: mongo
    expose:
      - 27017
    ports:
      - 30001:27017 
    restart: always

  mongo2:
    hostname: mongo2
    image: mongo
    expose:
      - 27017
    ports:
      - 30002:27017
    restart: always

  mongo3:
    hostname: mongo3
    image: mongo
    expose:
      - 27017
    ports:
      - 30003:27017
    restart: always



# finally, we can define the initialization server
# this runs the `rs.initiate` command to intialize
# the replica set and connect the three servers to each other
  mongoinit:
    image: mongo
    # this container will exit after executing the command
    restart: "no"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: >
      
      mongosh --host mongo1:27017 ;

      ' 
      rs.initiate(
      {
        "_id" : "my-mongo-set",
        configsvr: true,
        "members" : [
          {
            "_id" : 0,
            "host" : "mongo1:27017"
          },
          {
            "_id" : 1,
            "host" : "mongo2:27017"
          },
          {
            "_id" : 2,
            "host" : "mongo3:27017"
          }
        ]
      }
      );
      ';
      mongod --configsvr --replSet my-mongo-set  ;
      mongosh --host mongo1:27017 ;